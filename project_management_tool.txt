CREATE TABLE PROJECT_MANAGEMENT_USERS (USER_ID NUMBER PRIMARY KEY, FIRST_NAME VARCHAR(40) NOT NULL, LAST_NAME VARCHAR(40), EMAIL VARCHAR(40) NOT NULL, PASSWORD VARCHAR(40) NOT NULL, ROLE VARCHAR(10) NOT NULL);

CREATE SEQUENCE USER_SEQUENCE START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER USER_TRIGGER
BEFORE
INSERT
ON PROJECT_MANAGEMENT_USERS
FOR EACH ROW
BEGIN 
	IF :NEW.USER_ID IS NULL THEN 
		:NEW.USER_ID := USER_SEQUENCE.NEXTVAL;
	END IF;
	:NEW.FIRST_NAME := UPPER(:NEW.FIRST_NAME);
	:NEW.LAST_NAME := UPPER(:NEW.LAST_NAME);
END;
/

CREATE OR REPLACE TRIGGER USER_TRIGGER_2
BEFORE
UPDATE
ON PROJECT_MANAGEMENT_USERS
FOR EACH ROW
BEGIN 
	:NEW.FIRST_NAME := UPPER(:NEW.FIRST_NAME);
	:NEW.LAST_NAME := UPPER(:NEW.LAST_NAME);
END;
/


CREATE TABLE PROJECT_MANAGEMENT_PROJECTS (PROJECT_ID NUMBER PRIMARY KEY, TITLE VARCHAR(40) NOT NULL, DESCRIPTION VARCHAR(100), ACTIVE VARCHAR(20) NOT NULL);

CREATE SEQUENCE PROJECT_SEQUENCE START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER PROJECT_TRIGGER
BEFORE 
INSERT
ON PROJECT_MANAGEMENT_PROJECTS
FOR EACH ROW
BEGIN
	IF :NEW.PROJECT_ID IS NULL THEN 
		:NEW.PROJECT_ID := PROJECT_SEQUENCE.NEXTVAL;
	END IF;
END;
/

CREATE TABLE PROJECT_MANAGEMENT_TASKS (TASK_ID NUMBER PRIMARY KEY, PROJECT_ID NUMBER REFERENCES PROJECT_MANAGEMENT_PROJECTS, TASK_DETAIL VARCHAR(40) NOT NULL, ASSIGNED_BY NUMBER REFERENCES PROJECT_MANAGEMENT_USERS, ASSIGNED_TO NUMBER REFERENCES PROJECT_MANAGEMENT_USERS, REMARKS VARCHAR(100), STATUS VARCHAR(20) NOT NULL, ASSIGNED_DATE DATE NOT NULL, COMPLETION_DATE DATE);

CREATE OR REPLACE SEQUENCE TASK_SEQUENCE START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TASK_TRIGGER
BEFORE 
INSERT
ON PROJECT_MANAGEMENT_TASKS
FOR EACH ROW
BEGIN
	IF :NEW.TASK_ID IS NULL THEN
		:NEW.TASK_ID := TASK_SEQUENCE.NEXTVAL;
	END IF;
END;
/

